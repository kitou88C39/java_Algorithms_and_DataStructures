import java.util.Scanner;

public class Main {
    // 配列の内容を出力するヘルパー関数
    static void print(int a[], int n) {
        for (int i = 0; i < n; i++) {
            if (i > 0) // 最初の要素以外はスペースを挿入
                System.out.print(" ");
            System.out.print(a[i]); // 要素を出力
        }
        System.out.println(); // 改行
    }

    // 選択ソートのメインロジック
    static void selectionSort(int a[], int n) {
        // 配列の先頭から n-1 番目までループ（最後の要素は自動的に正しい位置に来るため）
        for (int i = 0; i < n - 1; i++) {
            // 変数 minIndex を用意する
            // 現在のソート対象範囲 (i から n-1) の中で、最小値のインデックスを保持します。
            // 最初は、現在の位置 i を仮の最小値のインデックスとします。
            int minIndex = i; 
            
            // j が i+1 から n-1 までの for 文を用意する
            // 未ソート部分 (i+1 から n-1) を走査し、真の最小値を探します。
            for (int j = i + 1; j < n; j++) {
                // A_j < A_{minIndex} なら
                // 現在の要素 a[j] が、これまでに見つけた最小値 (a[minIndex]) より小さければ、
                // minIndex を j に更新します。
                if (a[j] < a[minIndex]) {
                    minIndex = j;
                }
            }

            // A_i と A_{minIndex} を交換する
            // 見つかった最小値の要素 (a[minIndex]) と、現在の位置の要素 (a[i]) を入れ替えます。
            // これで、a[i] の位置にはその時点で最も小さい値が来ます。
            int temp = a[minIndex]; // a[minIndex] の値を一時的に保存
            a[minIndex] = a[i];     // a[i] の値を minIndex の位置に移動
            a[i] = temp;            // 一時保存した最小値を i の位置に移動

            // 各 i の処理が終わった時点での配列を出力
            // 問題の指示に合わせて、各ステップの結果を出力します。
            print(a, n);
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); // Scannerオブジェクトを生成

        int n = sc.nextInt(); // 数列の要素数 n を読み込む

        int a[] = new int[n]; // 要素数 n の整数配列 a を宣言
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt(); // 配列 a の各要素を読み込む
        }
        
        // 問題の出力例に合わせるため、ソート開始前の最初の出力は不要です。
        // 各 i (i = 1, 2, ..., n - 1) について i 回目の処理が終わった時点での配列を出力するため、
        // selectionSort メソッド内の print() で十分です。

        selectionSort(a, n); // 選択ソートを実行

        sc.close(); // Scanner のリソースを解放する（良い習慣です）
    }
}